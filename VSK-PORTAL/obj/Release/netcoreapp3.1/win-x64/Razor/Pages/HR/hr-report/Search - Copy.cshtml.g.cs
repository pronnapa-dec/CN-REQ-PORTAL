#pragma checksum "F:\MIS-PROJECTS\MIS-PORTAL\MIS-PORTAL\Pages\HR\hr-report\Search - Copy.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f7d587e7cce2fc4feacc82d0c0d0719f10db412c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(MIS_PORTAL.Pages.HR.hr_report.Pages_HR_hr_report_Search___Copy), @"mvc.1.0.view", @"/Pages/HR/hr-report/Search - Copy.cshtml")]
namespace MIS_PORTAL.Pages.HR.hr_report
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "F:\MIS-PROJECTS\MIS-PORTAL\MIS-PORTAL\Pages\_ViewImports.cshtml"
using MIS_PORTAL;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f7d587e7cce2fc4feacc82d0c0d0719f10db412c", @"/Pages/HR/hr-report/Search - Copy.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"da4f91d6f37072cc35f23d4c894b614ca986f555", @"/Pages/_ViewImports.cshtml")]
    public class Pages_HR_hr_report_Search___Copy : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<!doctype html>\r\n<html lang=\"en\">\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f7d587e7cce2fc4feacc82d0c0d0719f10db412c3150", async() => {
                WriteLiteral(@"
    <!-- Required meta tags -->
    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1, shrink-to-fit=no"">
    <!-- Bootstrap CSS -->
    <title>Concept - Bootstrap 4 Admin Dashboard Template</title>

    <script src=""https://code.jquery.com/jquery-3.5.1.js"" integrity=""sha256-QWo7LDvxbWT2tbbQ97B53yJnYU3WhH/C8ycbRAkjPDc="" crossorigin=""anonymous""></script>

    <script src=""https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"" integrity=""sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ=="" crossorigin=""anonymous""></script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f7d587e7cce2fc4feacc82d0c0d0719f10db412c4777", async() => {
                WriteLiteral(@"

    <h1 class=""text_header""></h1>


    <script>

		let MRP_Dailydelivery_Get_URL = 'https://vsk.tms-vcargo.com/api/tms/v1/public/dailydelivery/report';

		$.init = function () {

			(async () => {
				let citem_dailydelivery = [];

                const rawResponseIm = await fetch(MRP_Dailydelivery_Get_URL, {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json',
                        'token': 'zVSKWbx2bN2WFS74221w82o44GAEzms7xG0ApZfW'
                    },
                    body: JSON.stringify({
                        ""shippingNoteNumber"": """",
                        ""manifestNoteNumber"": """",
                        ""vehicle"": """",
                        ""driver"": """",
                        ""projectId"": 1,
                        ""statusId"": 4,
                        ""startDate"": moment().format('YYYY-MM-DD') + ""00:00:00"",
                     ");
                WriteLiteral(@"   ""endDate"": moment().format('YYYY-MM-DD') + ""23:59:59""
                    })
                });
                const content_mo= await rawResponseIm.json();



                $.each(content_mo.object, function (key, val) {

                    citem_dailydelivery.push({
                        tms_job_date: moment(val['createDate'], 'YYYY-MM-DD').format('YYYY-MM-DD 00:00:00'),
                        tms_job_route: val['routeLineName'],
                        tms_job_plate: val['vehicle'],
                        tms_job_name: val['driver'],
                        tms_job_no: val['shippingNoteNumber'],
                        tms_job_cus_name: val['recipientName'],
                        tms_job_created_date: val['createDate'],
                        tms_job_delivery_date: val['currentStatusDate']
                    });

                });

				const rawResponseMo = await fetch(MRP_Dailydelivery_Get_URL, {
					method: 'POST',
					headers: {
						'Accept': 'application/j");
                WriteLiteral(@"son',
						'Content-Type': 'application/json',
						'token': 'zVSKWbx2bN2WFS74221w82o44GAEzms7xG0ApZfW'
					},
					body: JSON.stringify({
						""shippingNoteNumber"": """",
						""manifestNoteNumber"": """",
						""vehicle"": """",
						""driver"": """",
						""projectId"": 1,
						""statusId"": 4,
                        ""startDate"": moment().format('YYYY-MM-DD') + ""00:00:00"",
                        ""endDate"": moment().format('YYYY-MM-DD') + ""23:59:59""
					})
				});
				const content_mo = await rawResponseMo.json();



				$.each(content_mo.object, function (key, val) {

					citem_dailydelivery.push({
						tms_job_date: moment(val['createDate'], 'YYYY-MM-DD').format('YYYY-MM-DD 00:00:00'),
						tms_job_route: val['routeLineName'],
						tms_job_plate: val['vehicle'],
						tms_job_name: val['driver'],
						tms_job_no: val['shippingNoteNumber'],
						tms_job_cus_name: val['recipientName'],
						tms_job_created_date: val['createDate'],
						tms_job_delivery_date: val['currentStatus");
                WriteLiteral(@"Date']
					});

				});


				const rawResponseTR = await fetch(MRP_Dailydelivery_Get_URL, {
					method: 'POST',
					headers: {
						'Accept': 'application/json',
						'Content-Type': 'application/json',
						'token': 'zVSKWbx2bN2WFS74221w82o44GAEzms7xG0ApZfW'
					},
					body: JSON.stringify({
						""shippingNoteNumber"": """",
						""manifestNoteNumber"": """",
						""vehicle"": """",
						""driver"": """",
						""projectId"": 1,
						""statusId"": 3,
                        ""startDate"": moment().format('YYYY-MM-DD') + ""00:00:00"",
                        ""endDate"": moment().format('YYYY-MM-DD') + ""23:59:59""
					})
				});
				const content_tr = await rawResponseTR.json();

				$.each(content_tr.object, function (key, val) {

					citem_dailydelivery.push({
						tms_job_date: moment(val['createDate'],'YYYY-MM-DD' ).format('YYYY-MM-DD 00:00:00'),
						tms_job_route: val['routeLineName'],
						tms_job_plate: val['vehicle'],
						tms_job_name: val['driver'],
						tms_job_no: val[");
                WriteLiteral(@"'shippingNoteNumber'],
						tms_job_cus_name: val['recipientName'],
						tms_job_created_date: val['createDate'],
						tms_job_delivery_date: val['currentStatusDate']
					});

				});

				const rawResponsePE = await fetch(MRP_Dailydelivery_Get_URL, {
					method: 'POST',
					headers: {
						'Accept': 'application/json',
						'Content-Type': 'application/json',
						'token': 'zVSKWbx2bN2WFS74221w82o44GAEzms7xG0ApZfW'
					},
					body: JSON.stringify({
						""shippingNoteNumber"": """",
						""manifestNoteNumber"": """",
						""vehicle"": """",
						""driver"": """",
						""projectId"": 1,
						""statusId"": 2,
                        ""startDate"": moment().format('YYYY-MM-DD') + ""00:00:00"",
                        ""endDate"": moment().format('YYYY-MM-DD') + ""23:59:59""
					})
				});
				const content_pe = await rawResponsePE.json();

				$.each(content_pe.object, function (key, val) {

					citem_dailydelivery.push({
						tms_job_date: moment(val['createDate'],'YYYY-MM-DD' ).format('");
                WriteLiteral(@"YYYY-MM-DD 00:00:00'),
						tms_job_route: val['routeLineName'],
						tms_job_plate: val['vehicle'],
						tms_job_name: val['driver'],
						tms_job_no: val['shippingNoteNumber'],
						tms_job_cus_name: val['recipientName'],
						tms_job_created_date: val['createDate'],
						tms_job_delivery_date: val['currentStatusDate']
					});

				});


				console.log(citem_dailydelivery);

				$.ajax({
					url: 'http://localhost:49705/v1/TRP_TMS_Sync_Add',
					type: 'POST',
					contentType: ""application/json; charset=utf-8"",
					data: JSON.stringify(citem_dailydelivery) ,
					success: function (result) {

					}
				});

			})();

		};

		$(document).ready(async function () {

			await $.init();

			//alert('hello')

		});



    </script>

");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n</html>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
